CS313-ACE-2 VERSION HISTORY

================================================================================

Version -1:	Initial Project (now scrapped)

Commenced:	28/10/2014
Finished:	03/11/2014

--------------------------------------------------------------------------------

	v-1.0 - 28/10/2014 - 03/11/2014

		Work had initially begun on the assignment, and the completion of a 
		single threaded version was completed. However, I felt that it would be
		wise to overhaul and start again, since I felt that my initial structure
		in how I went through the assignment was inadequate in terms of 
		documentation and general layout. I felt like I wanted to do an overhaul
		with a more cohesive approach rather than the trap of diving straight in
		like I had done so. I still have this original version, but I feel that
		I will not be disadvantaged by this restart of the project. 

		This decision has primarily been made to put my mind more at ease.

================================================================================

Version 0:	Preparation

Commenced:	04/11/2014
Finished:	04/11/2014

--------------------------------------------------------------------------------

	v0.0 - 04/11/2014

		A private GitHub repository was created for the purpose of easier 
		tracking of history and progress of the assignment. This was done in 
		tandem with the creation of the README.md and VERSIONHISTORY.txt files. 
		
================================================================================

Version 1:	Message Interface & Implemantation

Commenced:	04/11/2014
Finished:	04/11/2014

--------------------------------------------------------------------------------

	v0.1 - 04/11/2014

		Created the Message interface that is given to us in the assignment.
		The scope of the interface has been extended to also have methods for
		getting and setting the string that will be sent from the client. The
		Javadoc for this interface has also been written.

	v0.2 - 04/11/2014

		Created the implementation of the Message interface, called MessageImpl.
		The class has had all the methods completed as well. For the purposes of
		thoroughness, testing must be done upon the implementation before it is
		wise to continue on with the project. Although I am of course confident
		in the correctness of the implementation.

	v0.3 - 04/11/2014

		Created JUnit test cases in the class MessageImplTest, this is done to
		ensure that the setters and getters of the class are correctly
		implemented. Currently I am unsure if the testing requires further
		cases, since the methods being tested are relatively simple.

	v0.4 - 04/11/2014

		The Message interface, implementation and unit testing are all deemed
		ready to go and have had some tidying up to finalise this version.
		Updated VERSIONHISTORY.txt
		
================================================================================

Version 1:	Single Threaded Client/Server

Commenced:	04/11/2014
Finished:	10/11/2014

--------------------------------------------------------------------------------

	v1.0 - 04/11/2014
	
		Created the Client and Server classes, however so far their content has
		not been implemented yet. Instead, the initial Javadoc has been created
		The current plan is to examine the previous version of my solution, and
		then analyse how it can be improved, before moving forward with the 
		project.

	v1.1 - 06/11/2014

		Implemented the Server class, adding it's functionality. In terms of
		breaking up the previous class' main method into smaller pieces, little
		was achieved since I felt that after removing some print statements used
		for checking, the code was small enough to not require further breaking 
		down. This will be reassessed during multithreading part of the
		exercise.
		
	v1.2 - 08/11/2014
	
		Implemented the Client class, and now the system is capable of
		communicating between the client and server. Basic testing has shown me
		than this is working, but I will be doing some more thorough testing
		in the future as well, since this is still merely the single threaded
		version.
		
	v1.3 - 10/11/2014
	
		Generated Javadoc for the project, although since Client and Server are
		primarily private methods, they have not been included, although this is
		not a major issue. I have tweaked Client and Server to have fields that
		make some sense, mainly being the client input and the created message
		object.

================================================================================

Version 2:	MultiThreaded Client/Server

Commenced:	11/11/2014
Finished:	

--------------------------------------------------------------------------------

	v2.0 - 11/11/2014
	
		Created ServerDriver class, which contains the main method for dealing
		with the server. This was done in preparation for implementing
		multithreading within the project.
		
	v2.1 - 18/11/2014
	
		Created an initial thread pool in the project, with the ServerDriver
		class containing and handling the pool. The Server class contains the
		execution of the task. Further testing is required however.